{"version":3,"sources":["googleApi.js","storeService.js","authService.js","App.js","registerServiceWorker.js","index.js"],"names":["DISCOVERY_DOCS","session","Promise","resolve","$script","window","gapi","load","googleApi","getSession","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","client","init","apiKey","process","clientId","discoveryDocs","scope","abrupt","stop","this","apply","arguments","SPREADSHEET_ID","TRANSACTIONS_COLUMNS","ITEMS_COLUMNS","StoreService","api","length","undefined","all","spreadsheet","rows","transactions","sheets","spreadsheets","values","get","spreadsheetId","range","result","filter","row","some","i","map","transaction","forEach","col","index","isNumeric","Number","fetchItems","_ref2","_callee2","_context2","R","addAll","_ref3","_callee3","params","valueRangeBody","_context3","valueInputOption","_ref4","employee","item","gender","price","paymentStatus","commisson","date","majorDimension","append","_x","authService","isSignedIn","auth2","getAuthInstance","listen","cb","signIn","signOut","_callee4","_context4","moment","locale","DEFAULT_TRANSACTION","quantity","format","App","state","transactionToSubmit","items","isLoading","isMessageOpen","showMessage","_this","setState","handleClose","event","reason","reset","updateSigninStatus","fetchTransactions","handleChange","field","value","target","objectSpread","defineProperty","find","name","handleSubmit","repeatTransaction","formatDate","toTransactions","preventDefault","x","storeService","t0","error","finish","lastTransactions","toConsumableArray","reverse","slice","classes","props","react_default","createElement","className","progressWrapper","CircularProgress_default","AppBar_default","position","Toolbar_default","Typography_default","variant","color","flex","Button_default","id","onClick","handleSignoutClick","container","onSubmit","autoComplete","FormControl_default","required","textField","InputLabel_default","htmlFor","NativeSelect_default","native","onChange","inputProps","option","key","TextField_default","label","type","max","min","component","FormLabel_default","RadioGroup_default","aria-label","group","FormControlLabel_default","control","Radio_default","submit","title","List_default","ListItem_default","ListItemText_default","primary","concat","calendar","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton_default","close","Close_default","size","handleAuthClick","Component","withStyles","theme","display","flexWrap","flexDirection","flexGrow","marginBottom","spacing","unit","marginLeft","marginRight","width","marginTop","menu","textAlign","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7752bb00.chunk.js","sourcesContent":["import $script from 'scriptjs';\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst SCOPES = 'https://www.googleapis.com/auth/spreadsheets';\nconst DISCOVERY_DOCS = [\n  'https://sheets.googleapis.com/$discovery/rest?version=v4'\n];\n\nconst session = new Promise(resolve => {\n  $script('https://apis.google.com/js/api.js', () => {\n    window.gapi.load('client:auth2', () => resolve(window.gapi));\n  });\n});\n\nconst getSession = async () => {\n    const gapi = await session;\n    await gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      return gapi;\n};\n\nexport default {\n  getSession\n};\n","import * as R from 'ramda';\nimport googleApi from './googleApi';\n\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\nconst FETCH_RANGE = 'entrada!A2:H';\nconst INSERT_RANGE = 'entrada!A1:B';\nconst FETCH_ITEMS_RANGE = 'servicos!A2:B';\nconst TRANSACTIONS_COLUMNS = [\n  'employee',\n  'item',\n  'gender',\n  'price',\n  'paymentStatus',\n  'client',\n  'commisson',\n  'date'\n];\n\nconst ITEMS_COLUMNS = ['name', 'price'];\n\nconst StoreService = (api = googleApi) => {\n  const all = async () => {\n    const gapi = await api.getSession();\n    const spreadsheet = await gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: SPREADSHEET_ID,\n      range: FETCH_RANGE\n    });\n\n    const rows = spreadsheet.result.values || [];\n\n    const transactions = rows\n      .filter(row => row.some(i => i))\n      .map(row => {\n        const transaction = {};\n        TRANSACTIONS_COLUMNS.forEach((col, index) => {\n          const isNumeric = col === 'price' || col === 'commisson';\n          transaction[col] = isNumeric ? Number(row[index]) : row[index];\n        });\n\n        return transaction;\n      });\n\n    return transactions;\n  };\n\n  const fetchItems = async () => {\n    const gapi = await api.getSession();\n\n    const spreadsheet = await gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: SPREADSHEET_ID,\n      range: FETCH_ITEMS_RANGE\n    });\n\n    const rows = spreadsheet.result.values || [];\n\n    const transactions = rows\n      .filter(row => row.some(i => i))\n      .map(row => {\n        const transaction = {};\n        ITEMS_COLUMNS.forEach((col, index) => {\n          const isNumeric =\n            (col === 'price' || col === 'commisson') && !R.isNil(row[index]);\n          transaction[col] = isNumeric ? Number(row[index]) : row[index];\n        });\n\n        return transaction;\n      });\n\n    return transactions;\n  };\n\n  const addAll = async transactions => {\n    const gapi = await api.getSession();\n\n    const params = {\n      spreadsheetId: SPREADSHEET_ID,\n      range: INSERT_RANGE,\n      valueInputOption: 'USER_ENTERED'\n    };\n\n    const values = transactions.map(\n      ({\n        employee,\n        item,\n        gender,\n        price,\n        paymentStatus,\n        client,\n        commisson,\n        date\n      }) => [\n        employee,\n        item,\n        gender,\n        price,\n        paymentStatus,\n        client,\n        commisson,\n        date\n      ]\n    );\n\n    const valueRangeBody = {\n      majorDimension: 'ROWS',\n      range: INSERT_RANGE,\n      values\n    };\n\n    await gapi.client.sheets.spreadsheets.values.append(params, valueRangeBody);\n  };\n\n  return {\n    all,\n    fetchItems,\n    addAll\n  };\n};\n\nexport default StoreService;\n","import googleApi from './googleApi';\n\nconst isSignedIn = async () => {\n  const gapi = await googleApi.getSession();\n  return gapi.auth2.getAuthInstance().isSignedIn.get();\n};\nconst listen = async cb => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().isSignedIn.listen(cb);\n};\n\nconst signIn = async () => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().signIn();\n};\n\nconst signOut = async () => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().signOut();\n};\n\nexport default {\n  isSignedIn,\n  listen,\n  signIn,\n  signOut\n};\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport * as R from 'ramda';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport StoreService from './storeService';\nimport authService from './authService';\n\n\nmoment().locale('pt');\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  group: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  flex: {\n    flexGrow: 1\n  },\n  textField: {\n    marginBottom: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '100%'\n  },\n  title: {\n    marginTop: 40,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '100%'\n  },\n  menu: {\n    width: 200\n  },\n  progressWrapper: {\n    marginTop: '30%',\n    textAlign: 'center'\n  }\n});\n\nconst DEFAULT_TRANSACTION = {\n  employee: '',\n  item: '',\n  price: '',\n  client: '',\n  gender: '',\n  commisson: '',\n  paymentStatus: '',\n  quantity: 1,\n  date: moment().format('YYYY-MM-DDThh:mm')\n};\n\nclass App extends Component {\n  state = {\n    transactionToSubmit: DEFAULT_TRANSACTION,\n    transactions: [],\n    items: [],\n    isLoading: true,\n    isMessageOpen: false\n  };\n\n  async componentDidMount() {\n    this.storeService = StoreService(window.gapi);\n    const isSignedIn = await authService.isSignedIn();\n    this.setState({ isLoading: false });\n    authService.listen(this.updateSigninStatus);\n    this.updateSigninStatus(isSignedIn);\n  }\n\n  showMessage = () => {\n    this.setState({ isMessageOpen: true });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ isMessageOpen: false });\n  };\n\n  reset = () => {\n    this.setState({ transactionToSubmit: DEFAULT_TRANSACTION });\n  };\n\n  updateSigninStatus = isSignedIn => {\n    this.setState({ isSignedIn });\n    if (isSignedIn) {\n      this.fetchTransactions();\n      this.fetchItems();\n    }\n  };\n\n  handleAuthClick() {\n    authService.signIn();\n  }\n\n  handleSignoutClick() {\n    authService.signOut();\n  }\n\n  handleChange = field => event => {\n    const value = event.target.value;\n    const transactionToSubmit = {\n      ...this.state.transactionToSubmit,\n      ...{ [field]: value }\n    };\n\n    if (field === 'item' && value) {\n      transactionToSubmit.price = this.state.items.find(\n        i => i.name === value\n      ).price;\n    }\n\n    this.setState({ transactionToSubmit });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const repeatTransaction = R.flip(R.repeat)(\n      this.state.transactionToSubmit.quantity\n    );\n    const formatDate = x =>\n      R.assoc(\n        'date',\n        moment(x.date, 'YYYY-MM-DDThh:mm').format('DD/MM/YYYY h:mm:ss'),\n        x\n      );\n    const toTransactions = R.compose(\n      repeatTransaction,\n      R.dissoc('quantity'),\n      formatDate\n    );\n    const transactions = toTransactions(this.state.transactionToSubmit);\n\n    try {\n      this.setState({ isLoading: true });\n      await this.storeService.addAll(transactions);\n      this.fetchTransactions();\n      this.reset();\n      this.showMessage();\n    } catch (error) {\n      this.setState({ error: error.result.error });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  async fetchTransactions() {\n    try {\n      const transactions = await this.storeService.all();\n      this.setState({ transactions });\n    } catch (e) {\n      this.setState({ error: e.result.error });\n    }\n  }\n\n  fetchItems = async () => {\n    try {\n      const items = await this.storeService.fetchItems();\n      this.setState({ items });\n    } catch (e) {\n      this.setState({ error: e.result.error });\n    }\n  };\n\n  lastTransactions = () => {\n    const reversed = [...this.state.transactions].reverse();\n    return reversed.slice(0, 10);\n  };\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.error) {\n      return 'Ocorreu um erro, edite diretamente na planilha ou tente mais tarde';\n    }\n    if (this.state.isLoading) {\n      return (\n        <div className={classes.progressWrapper}>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (!this.state.isSignedIn) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          id=\"authorize_button\"\n          onClick={this.handleAuthClick}\n        >\n          Entrar\n        </Button>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Typography\n              variant=\"title\"\n              color=\"inherit\"\n              className={classes.flex}\n            >\n              Salão ({process.env.REACT_APP_VERSION})\n            </Typography>\n\n            <Button\n              color=\"inherit\"\n              id=\"signout_button\"\n              onClick={this.handleSignoutClick}\n            >\n              Sair\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <form\n          className={classes.container}\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n        >\n          <FormControl required className={classes.textField}>\n            <InputLabel htmlFor=\"item\">Item</InputLabel>\n            <Select\n              native\n              value={this.state.transactionToSubmit.item}\n              onChange={this.handleChange('item')}\n              name=\"item\"\n              inputProps={{\n                id: 'item'\n              }}\n            >\n              <option value=\"\" />\n              {this.state.items.map(option => (\n                <option key={option.name} value={option.name}>\n                  {option.name}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            value={this.state.transactionToSubmit.price}\n            label=\"Preço\"\n            type=\"number\"\n            onChange={this.handleChange('price')}\n            className={classes.textField}\n            required\n          />\n\n          <TextField\n            value={this.state.transactionToSubmit.quantity}\n            label=\"Quantidade\"\n            type=\"number\"\n            inputProps={{\n              required: false,\n              max: 10,\n              min: 1\n            }}\n            onChange={this.handleChange('quantity')}\n            className={classes.textField}\n            required\n          />\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Colaborador</FormLabel>\n            <RadioGroup\n              aria-label=\"employee\"\n              name=\"employee\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.employee}\n              onChange={this.handleChange('employee')}\n            >\n              <FormControlLabel\n                value=\"Maurilio\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"Maurilio\"\n              />\n              <FormControlLabel\n                value=\"Victor\"\n                control={<Radio color=\"primary\" />}\n                label=\"Victor\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Comissão</FormLabel>\n            <RadioGroup\n              aria-label=\"commisson\"\n              name=\"commisson\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.commisson}\n              onChange={this.handleChange('commisson')}\n            >\n              <FormControlLabel\n                value=\"20\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"20%\"\n              />\n              <FormControlLabel\n                value=\"30\"\n                control={<Radio color=\"primary\" />}\n                label=\"30%\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Gênero</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.gender}\n              onChange={this.handleChange('gender')}\n            >\n              <FormControlLabel\n                value=\"F\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"Feminino\"\n              />\n              <FormControlLabel\n                value=\"M\"\n                control={<Radio color=\"primary\" />}\n                label=\"Masculino\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Pagamento</FormLabel>\n            <RadioGroup\n              aria-label=\"paymentStatus\"\n              name=\"paymentStatus\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.paymentStatus}\n              onChange={this.handleChange('paymentStatus')}\n            >\n              <FormControlLabel\n                value=\"pago\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"pago\"\n              />\n              <FormControlLabel\n                value=\"deve\"\n                control={<Radio color=\"primary\" />}\n                label=\"deve\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <TextField\n            value={this.state.transactionToSubmit.client}\n            label=\"Cliente\"\n            onChange={this.handleChange('client')}\n            className={classes.textField}\n          />\n\n          <TextField\n            value={this.state.transactionToSubmit.date}\n            label=\"Data\"\n            type=\"datetime-local\"\n            onChange={this.handleChange('date')}\n            className={classes.textField}\n          />\n\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Salvar\n          </Button>\n        </form>\n        <Typography variant=\"title\" color=\"inherit\" className={classes.title}>\n          Últimas vendas\n        </Typography>\n\n        <List>\n          {this.lastTransactions().map((transaction, index) => (\n            <ListItem key={index}>\n              <ListItemText\n                primary={`${transaction.item} por ${\n                  transaction.employee\n                } ${moment(\n                  transaction.date,\n                  'DD/MM/YYYY h:mm:ss'\n                ).calendar()} `}\n              />\n            </ListItem>\n          ))}\n        </List>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n          open={this.state.isMessageOpen}\n          autoHideDuration={2000}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id'\n          }}\n          message={<span id=\"message-id\">Salvo com sucesso</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}