{"version":3,"sources":["googleApi.js","storeService.js","authService.js","cart/TransactionList.js","cart/Cart.js","cart/CartContainer.js","rootReducer.js","App.js","registerServiceWorker.js","index.js"],"names":["DISCOVERY_DOCS","session","Promise","resolve","$script","window","gapi","load","googleApi","getSession","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","client","init","apiKey","process","clientId","discoveryDocs","scope","abrupt","stop","apply","this","arguments","SPREADSHEET_ID","TRANSACTIONS_COLUMNS","ITEMS_COLUMNS","StoreService","api","length","undefined","all","spreadsheet","rows","transactions","sheets","spreadsheets","values","get","spreadsheetId","range","result","filter","row","some","i","map","transaction","forEach","col","index","isNumeric","Number","fetchItems","_ref2","_callee2","_context2","R","addTransactions","_ref3","_callee3","params","valueRangeBody","_context3","valueInputOption","_ref4","employee","item","gender","price","paymentStatus","commisson","date","majorDimension","append","_x","authService","isSignedIn","auth2","getAuthInstance","listen","cb","signIn","signOut","_callee4","_context4","TransactionItem","_ref$transaction","react_default","createElement","ListItem_default","ListItemText_default","concat","moment","calendar","TransactionList","List_default","t","TransactionList_TransactionItem","key","locale","DEFAULT_TRANSACTION","quantity","format","Cart","state","transactionToSubmit","isMessageOpen","showMessage","_this","setState","handleClose","event","reason","reset","updateSigninStatus","handleChange","field","value","target","objectSpread","defineProperty","props","items","find","name","handleSubmit","repeatTransaction","formatDate","toTransactions","preventDefault","x","onCreate","error","lastTransactions","toConsumableArray","reverse","slice","classes","isLoading","className","progressWrapper","CircularProgress_default","AppBar_default","position","Toolbar_default","Typography_default","variant","color","flex","Button_default","id","onClick","handleSignoutClick","container","onSubmit","autoComplete","FormControl_default","required","textField","InputLabel_default","htmlFor","NativeSelect_default","native","onChange","inputProps","option","TextField_default","label","type","max","min","component","FormLabel_default","RadioGroup_default","aria-label","group","FormControlLabel_default","control","Radio_default","submit","title","TransactionList_TransactionList","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton_default","close","Close_default","size","handleAuthClick","Component","withStyles","theme","display","flexWrap","flexDirection","flexGrow","marginBottom","spacing","unit","marginLeft","marginRight","width","marginTop","menu","textAlign","types","fetchTransactions","dispatch","payload","then","CartContainer","connect","combineReducers","App","cart_CartContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","middlewareEnhancer","applyMiddleware","thunkMiddleware","store","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.eb3f4cd6.chunk.js","sourcesContent":["import $script from 'scriptjs';\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst SCOPES = 'https://www.googleapis.com/auth/spreadsheets';\nconst DISCOVERY_DOCS = [\n  'https://sheets.googleapis.com/$discovery/rest?version=v4'\n];\n\nconst session = new Promise(resolve => {\n  $script('https://apis.google.com/js/api.js', () => {\n    window.gapi.load('client:auth2', () => resolve(window.gapi));\n  });\n});\n\nconst getSession = async () => {\n    const gapi = await session;\n    await gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      return gapi;\n};\n\nexport default {\n  getSession\n};\n","import * as R from 'ramda';\nimport googleApi from './googleApi';\n\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\nconst FETCH_RANGE = 'entrada!A2:H';\nconst INSERT_RANGE = 'entrada!A1:B';\nconst FETCH_ITEMS_RANGE = 'servicos!A2:B';\nconst TRANSACTIONS_COLUMNS = [\n  'employee',\n  'item',\n  'gender',\n  'price',\n  'paymentStatus',\n  'client',\n  'commisson',\n  'date'\n];\n\nconst ITEMS_COLUMNS = ['name', 'price'];\n\nconst StoreService = (api = googleApi) => {\n  const all = async () => {\n    const gapi = await api.getSession();\n    const spreadsheet = await gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: SPREADSHEET_ID,\n      range: FETCH_RANGE\n    });\n\n    const rows = spreadsheet.result.values || [];\n\n    const transactions = rows\n      .filter(row => row.some(i => i))\n      .map(row => {\n        const transaction = {};\n        TRANSACTIONS_COLUMNS.forEach((col, index) => {\n          const isNumeric = col === 'price' || col === 'commisson';\n          transaction[col] = isNumeric ? Number(row[index]) : row[index];\n        });\n\n        return transaction;\n      });\n\n    return transactions;\n  };\n\n  const fetchItems = async () => {\n    const gapi = await api.getSession();\n\n    const spreadsheet = await gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: SPREADSHEET_ID,\n      range: FETCH_ITEMS_RANGE\n    });\n\n    const rows = spreadsheet.result.values || [];\n\n    const transactions = rows\n      .filter(row => row.some(i => i))\n      .map(row => {\n        const transaction = {};\n        ITEMS_COLUMNS.forEach((col, index) => {\n          const isNumeric =\n            (col === 'price' || col === 'commisson') && !R.isNil(row[index]);\n          transaction[col] = isNumeric ? Number(row[index]) : row[index];\n        });\n\n        return transaction;\n      });\n\n    return transactions;\n  };\n\n  const addTransactions = async transactions => {\n    const gapi = await api.getSession();\n\n    const params = {\n      spreadsheetId: SPREADSHEET_ID,\n      range: INSERT_RANGE,\n      valueInputOption: 'USER_ENTERED'\n    };\n\n    const values = transactions.map(\n      ({\n        employee,\n        item,\n        gender,\n        price,\n        paymentStatus,\n        client,\n        commisson,\n        date\n      }) => [\n        employee,\n        item,\n        gender,\n        price,\n        paymentStatus,\n        client,\n        commisson,\n        date\n      ]\n    );\n\n    const valueRangeBody = {\n      majorDimension: 'ROWS',\n      range: INSERT_RANGE,\n      values\n    };\n\n    await gapi.client.sheets.spreadsheets.values.append(params, valueRangeBody);\n  };\n\n  return {\n    all,\n    fetchItems,\n    addTransactions\n  };\n};\n\nexport default StoreService;\n","import googleApi from './googleApi';\n\nconst isSignedIn = async () => {\n  const gapi = await googleApi.getSession();\n  return gapi.auth2.getAuthInstance().isSignedIn.get();\n};\nconst listen = async cb => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().isSignedIn.listen(cb);\n};\n\nconst signIn = async () => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().signIn();\n};\n\nconst signOut = async () => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().signOut();\n};\n\nexport default {\n  isSignedIn,\n  listen,\n  signIn,\n  signOut\n};\n","import React from 'react';\nimport moment from 'moment';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport const TransactionItem = ({ transaction: { item, employee, date } }) => {\n  return (\n    <ListItem>\n      <ListItemText>{`${item} por ${employee} ${moment(\n        date,\n        'DD/MM/YYYY h:mm:ss'\n      ).calendar()}`}</ListItemText>\n    </ListItem>\n  );\n};\nexport const TransactionList = ({ transactions }) => {\n  return (\n    <List>\n      {transactions.map((\n        t,\n        i // TODO: add a ID, we should not use index\n      ) => (\n        <TransactionItem key={i} transaction={t} />\n      ))}\n    </List>\n  );\n};\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport * as R from 'ramda';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport authService from '../authService';\nimport { TransactionList } from './TransactionList';\n\nmoment().locale('pt');\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  group: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  flex: {\n    flexGrow: 1\n  },\n  textField: {\n    marginBottom: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '100%'\n  },\n  title: {\n    marginTop: 40,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: '100%'\n  },\n  menu: {\n    width: 200\n  },\n  progressWrapper: {\n    marginTop: '30%',\n    textAlign: 'center'\n  }\n});\n\nconst DEFAULT_TRANSACTION = {\n  employee: '',\n  item: '',\n  price: '',\n  client: '',\n  gender: '',\n  commisson: '',\n  paymentStatus: '',\n  quantity: 1,\n  date: moment().format('YYYY-MM-DDThh:mm')\n};\n\nclass Cart extends Component {\n  state = {\n    transactionToSubmit: DEFAULT_TRANSACTION,\n    isMessageOpen: false\n  };\n\n  async componentDidMount() {\n    const isSignedIn = await authService.isSignedIn();\n    authService.listen(this.updateSigninStatus);\n    this.updateSigninStatus(isSignedIn);\n  }\n\n  showMessage = () => {\n    this.setState({ isMessageOpen: true });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ isMessageOpen: false });\n  };\n\n  reset = () => {\n    this.setState({ transactionToSubmit: DEFAULT_TRANSACTION });\n  };\n\n  updateSigninStatus = isSignedIn => {\n    this.setState({ isSignedIn });\n    if (isSignedIn) {\n      // TODO: Extrat this to a login component\n      // this.fetchTransactions();\n      // this.fetchItems();\n    }\n  };\n\n  handleAuthClick() {\n    authService.signIn();\n  }\n\n  handleSignoutClick() {\n    authService.signOut();\n  }\n\n  handleChange = field => event => {\n    const value = event.target.value;\n    const transactionToSubmit = {\n      ...this.state.transactionToSubmit,\n      ...{ [field]: value }\n    };\n\n    if (field === 'item' && value) {\n      transactionToSubmit.price =\n        this.props.items.find(i => i.name === value).price || '';\n    }\n\n    this.setState({ transactionToSubmit });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const repeatTransaction = R.flip(R.repeat)(\n      this.state.transactionToSubmit.quantity\n    );\n    const formatDate = x =>\n      R.assoc(\n        'date',\n        moment(x.date, 'YYYY-MM-DDThh:mm').format('DD/MM/YYYY h:mm:ss'),\n        x\n      );\n    const toTransactions = R.compose(\n      repeatTransaction,\n      R.dissoc('quantity'),\n      formatDate\n    );\n    const transactions = toTransactions(this.state.transactionToSubmit);\n\n    try {\n      this.props.onCreate(transactions);\n      this.reset();\n      this.showMessage();\n    } catch (error) {\n      this.setState({ error: error.result.error });\n    }\n  };\n\n  lastTransactions = () => {\n    const reversed = [...this.props.transactions].reverse();\n    return reversed.slice(0, 10);\n  };\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.error) {\n      return 'Ocorreu um erro, edite diretamente na planilha ou tente mais tarde';\n    }\n    if (this.props.isLoading) {\n      return (\n        <div className={classes.progressWrapper}>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (!this.state.isSignedIn) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          id=\"authorize_button\"\n          onClick={this.handleAuthClick}\n        >\n          Entrar\n        </Button>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Typography\n              variant=\"title\"\n              color=\"inherit\"\n              className={classes.flex}\n            >\n              Salão ({process.env.REACT_APP_VERSION})\n            </Typography>\n\n            <Button\n              color=\"inherit\"\n              id=\"signout_button\"\n              onClick={this.handleSignoutClick}\n            >\n              Sair\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <form\n          className={classes.container}\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n        >\n          <FormControl required className={classes.textField}>\n            <InputLabel htmlFor=\"item\">Item</InputLabel>\n            <Select\n              native\n              value={this.state.transactionToSubmit.item}\n              onChange={this.handleChange('item')}\n              name=\"item\"\n              inputProps={{\n                id: 'item'\n              }}\n            >\n              <option value=\"\" />\n              {this.props.items.map(option => (\n                <option key={option.name} value={option.name}>\n                  {option.name}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            value={this.state.transactionToSubmit.price}\n            label=\"Preço\"\n            type=\"number\"\n            onChange={this.handleChange('price')}\n            className={classes.textField}\n            required\n          />\n\n          <TextField\n            value={this.state.transactionToSubmit.quantity}\n            label=\"Quantidade\"\n            type=\"number\"\n            inputProps={{\n              required: false,\n              max: 10,\n              min: 1\n            }}\n            onChange={this.handleChange('quantity')}\n            className={classes.textField}\n            required\n          />\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Colaborador</FormLabel>\n            <RadioGroup\n              aria-label=\"employee\"\n              name=\"employee\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.employee}\n              onChange={this.handleChange('employee')}\n            >\n              <FormControlLabel\n                value=\"Maurilio\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"Maurilio\"\n              />\n              <FormControlLabel\n                value=\"Victor\"\n                control={<Radio color=\"primary\" />}\n                label=\"Victor\"\n              />\n              <FormControlLabel\n                value=\"Danúbia\"\n                control={<Radio color=\"primary\" />}\n                label=\"Danúbia\"\n              />\n              <FormControlLabel\n                value=\"Samuel\"\n                control={<Radio color=\"primary\" />}\n                label=\"Samuel\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Comissão</FormLabel>\n            <RadioGroup\n              aria-label=\"commisson\"\n              name=\"commisson\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.commisson}\n              onChange={this.handleChange('commisson')}\n            >\n              <FormControlLabel\n                value=\"15\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"15%\"\n              />\n              <FormControlLabel\n                value=\"20\"\n                control={<Radio color=\"primary\" />}\n                label=\"20%\"\n              />\n\n              <FormControlLabel\n                value=\"30\"\n                control={<Radio color=\"primary\" />}\n                label=\"30%\"\n              />\n              <FormControlLabel\n                value=\"40\"\n                control={<Radio color=\"primary\" />}\n                label=\"40%\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Gênero</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.gender}\n              onChange={this.handleChange('gender')}\n            >\n              <FormControlLabel\n                value=\"F\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"Feminino\"\n              />\n              <FormControlLabel\n                value=\"M\"\n                control={<Radio color=\"primary\" />}\n                label=\"Masculino\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Pagamento</FormLabel>\n            <RadioGroup\n              aria-label=\"paymentStatus\"\n              name=\"paymentStatus\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.paymentStatus}\n              onChange={this.handleChange('paymentStatus')}\n            >\n              <FormControlLabel\n                value=\"pago\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"pago\"\n              />\n              <FormControlLabel\n                value=\"deve\"\n                control={<Radio color=\"primary\" />}\n                label=\"deve\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <TextField\n            value={this.state.transactionToSubmit.client}\n            label=\"Cliente\"\n            onChange={this.handleChange('client')}\n            className={classes.textField}\n          />\n\n          <TextField\n            value={this.state.transactionToSubmit.date}\n            label=\"Data\"\n            type=\"datetime-local\"\n            onChange={this.handleChange('date')}\n            className={classes.textField}\n          />\n\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Salvar\n          </Button>\n        </form>\n        <Typography variant=\"title\" color=\"inherit\" className={classes.title}>\n          Últimas vendas\n        </Typography>\n\n        <TransactionList transactions={this.lastTransactions()} />\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n          open={this.state.isMessageOpen}\n          autoHideDuration={2000}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id'\n          }}\n          message={<span id=\"message-id\">Salvo com sucesso</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nCart.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Cart);\n","import { connect } from 'react-redux';\nimport StoreService from '../storeService';\nimport Cart from './Cart';\nexport const types = {\n  FETCH_TRANSACTIONS_SUCCESS: 'FETCH_TRANSACTIONS_SUCCESS',\n  FETCH_ITEMS_SUCCESS: 'FETCH_ITEMS_SUCCESS',\n  START_LOADING: 'START_LOADING',\n  FINISH_LOADING: 'FINISH_LOADING'\n};\n\nexport const startLoading = () => ({\n  type: types.START_LOADING\n});\n\nexport const finishLoading = () => ({\n  type: types.FINISH_LOADING\n});\n\nexport const fetchTransactionsSuccess = payload => ({\n  type: types.FETCH_TRANSACTIONS_SUCCESS,\n  payload\n});\n\nexport const fetchItemsSuccess = payload => ({\n  type: types.FETCH_ITEMS_SUCCESS,\n  payload\n});\n\nexport const fetchTransactions = () => async dispatch => {\n  dispatch(startLoading());\n  const transactions = await StoreService().all();\n  dispatch(fetchTransactionsSuccess(transactions));\n  dispatch(finishLoading());\n};\n\nexport const addTransactions = transactions => dispatch =>\n  StoreService()\n    .addTransactions(transactions)\n    .then(() => dispatch(fetchTransactions()));\n\nexport const fetchItems = () => dispatch =>\n  StoreService()\n    .fetchItems()\n    .then(items => dispatch(fetchItemsSuccess(items)));\n\nexport const transactionsReducer = (state = [], action) => {\n  switch (action.type) {\n    case types.FETCH_TRANSACTIONS_SUCCESS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport const itemsReducer = (state = [], action) => {\n  switch (action.type) {\n    case types.FETCH_ITEMS_SUCCESS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport const loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case types.START_LOADING:\n      return true;\n    case types.FINISH_LOADING:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst mapStateToProps = ({ transactions, items, isLoading }) => {\n  return {\n    transactions,\n    items,\n    isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  dispatch(fetchTransactions());\n  dispatch(fetchItems());\n  return {\n    onCreate: transactions => {\n      dispatch(addTransactions(transactions));\n    }\n  };\n};\n\nconst CartContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n\nexport default CartContainer;\n","import { combineReducers } from 'redux';\nimport { transactionsReducer as transactions } from './cart/CartContainer';\nimport { itemsReducer as items } from './cart/CartContainer';\nimport { loadingReducer as isLoading } from './cart/CartContainer';\n\nexport default combineReducers({\n  transactions,\n  items,\n  isLoading\n});\n","import React from 'react';\nimport CartContainer from './cart/CartContainer';\nimport './App.css';\n\nconst App = () => <CartContainer />;\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from  './rootReducer';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware)\n\nconst store = createStore(rootReducer, undefined, middlewareEnhancer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}