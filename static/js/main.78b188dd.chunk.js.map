{"version":3,"sources":["googleApi.js","storeService.ts","authService.js","cart/TransactionList.js","cart/Cart.tsx","cart/CartContainer.tsx","constants.ts","rootReducer.ts","App.js","registerServiceWorker.js","index.tsx"],"names":["DISCOVERY_DOCS","session","Promise","resolve","$script","window","gapi","load","googleApi","getSession","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","client","init","apiKey","process","clientId","discoveryDocs","scope","abrupt","stop","apply","this","arguments","SPREADSHEET_ID","TRANSACTIONS_COLUMNS","ITEMS_COLUMNS","StoreService","api","length","undefined","all","spreadsheet","rows","transactions","sheets","spreadsheets","values","get","spreadsheetId","range","result","filter","row","some","i","map","valueOf","key","indexOf","employee","item","price","Number","gender","commisson","paymentStatus","date","fetchItems","_ref2","_callee2","items","_context2","name","addTransactions","_ref3","_callee3","params","valueRangeBody","_context3","valueInputOption","_ref4","majorDimension","append","_x","authService","isSignedIn","auth2","getAuthInstance","listen","cb","signIn","signOut","_callee4","_context4","TransactionItem","_ref$transaction","transaction","react_default","createElement","ListItem","ListItemText","concat","moment","calendar","TransactionList","List","t","TransactionList_TransactionItem","locale","DEFAULT_TRANSACTION","quantity","format","Cart","state","transactionToSubmit","isMessageOpen","error","showMessage","_this","setState","handleClose","event","reason","reset","updateSigninStatus","handleChange","field","value","pathOr","objectSpread","defineProperty","props","find","handleSubmit","repeatTransaction","formatDate","toTransactions","preventDefault","flip","repeat","assoc","compose","dissoc","onCreate","lastTransactions","toConsumableArray","reverse","slice","classes","isLoading","className","progressWrapper","CircularProgress","AppBar","position","Toolbar","Typography","variant","color","flex","Button","id","onClick","handleSignoutClick","container","onSubmit","autoComplete","FormControl","required","textField","InputLabel","htmlFor","NativeSelect","onChange","inputProps","option","TextField","label","type","max","min","component","FormLabel","RadioGroup","aria-label","group","FormControlLabel","control","Radio","submit","title","TransactionList_TransactionList","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton","Close_default","size","handleAuthClick","Component","withStyles","theme","createStyles","display","flexWrap","flexDirection","flexGrow","marginBottom","spacing","marginLeft","marginRight","width","marginTop","menu","textAlign","fetchTransactions","dispatch","payload","CartContainer","connect","then","combineReducers","App","cart_CartContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","middlewareEnhancer","applyMiddleware","thunkMiddleware","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","es","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oSAKMA,EAAiB,CACrB,4DAGIC,EAAU,IAAIC,QAAQ,SAAAC,GAC1BC,IAAQ,oCAAqC,WAC3CC,OAAOC,KAAKC,KAAK,eAAgB,kBAAMJ,EAAQE,OAAOC,YAgB3CE,EAAA,CACbC,WAbc,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAV,EAAA,OAAAO,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACInB,EADJ,cACTK,EADSY,EAAAG,KAAAH,EAAAE,KAAA,EAETd,EAAKgB,OACRC,KAAK,CACJC,OAhBQC,0CAiBRC,SAlBUD,2EAmBVE,cAAe3B,EACf4B,MAlBO,iDAWI,cAAAV,EAAAW,OAAA,SASNvB,GATM,wBAAAY,EAAAY,SAAAd,MAAH,yBAAAN,EAAAqB,MAAAC,KAAAC,YAAA,aCXVC,EAAiBT,+CAIjBU,EAAiD,CACrD,WACA,OACA,SACA,QACA,gBACA,SACA,YACA,QAGIC,EAAgB,CAAC,OAAQ,SA2GhBC,EAzGM,WAAqB,IAApBC,EAAoBL,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAdzB,EAkG1B,MAAO,CACLiC,IAlGO,eAAA/B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAV,EAAAoC,EAAAC,EAAAC,EAAA,OAAA/B,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSkB,EAAI7B,aADb,cACJH,EADIY,EAAAG,KAAAH,EAAAE,KAAA,EAEgBd,EAAKgB,OAAOuB,OAAOC,aAAaC,OAAOC,IAAI,CACnEC,cAAef,EACfgB,MArBc,iBAiBN,cAEJR,EAFIxB,EAAAG,KAOJsB,EAA6BD,EAAYS,OAAOJ,QAAU,GAE1DH,EAAeD,EAClBS,OAAO,SAAAC,GAAG,OAAIA,EAAIC,KAAK,SAAAC,GAAC,OAAIA,MAC5BC,IAAI,SAAAH,GACH,IAAMI,EAAU,SAACC,GAAD,OACdL,EAAIM,YAAQD,EAAKvB,KAYnB,MAXiC,CAC/ByB,SAAUH,EAAQ,YAClBI,KAAMJ,EAAQ,QACdK,MAAOC,OAAON,EAAQ,UACtBnC,OAAQmC,EAAQ,UAChBO,OAAQP,EAAQ,UAChBQ,UAAWF,OAAON,EAAQ,cAC1BS,cAAeT,EAAQ,iBACvBU,KAAMV,EAAQ,WAtBVvC,EAAAW,OAAA,SA4BHe,GA5BG,wBAAA1B,EAAAY,SAAAd,MAAH,yBAAAN,EAAAqB,MAAAC,KAAAC,YAAA,GAmGPmC,WApEc,eAAAC,EAAA1D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAuD,IAAA,IAAAhE,EAAAoC,EAAAC,EAAA4B,EAAA,OAAA1D,EAAAC,EAAAG,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EACEkB,EAAI7B,aADN,cACXH,EADWkE,EAAAnD,KAAAmD,EAAApD,KAAA,EAGSd,EAAKgB,OAAOuB,OAAOC,aAAaC,OAAOC,IAAI,CACnEC,cAAef,EACfgB,MAnDoB,kBA8CL,cAGXR,EAHW8B,EAAAnD,KAQXsB,EAA6BD,EAAYS,OAAOJ,QAAU,GAE1DwB,EAAQ5B,EACXS,OAAO,SAAAC,GAAG,OAAIA,EAAIC,KAAK,SAAAC,GAAC,OAAIA,MAC5BC,IAAI,SAAAH,GACH,IAAMI,EAAU,SAACC,GAAD,OACdL,EAAIM,YAAQD,EAAKtB,KAMnB,MAJmB,CACjBqC,KAAMhB,EAAQ,QACdK,MAAOC,OAAON,EAAQ,gBAAajB,KAlBxBgC,EAAA3C,OAAA,SAuBV0C,GAvBU,wBAAAC,EAAA1C,SAAAwC,MAAH,yBAAAD,EAAAtC,MAAAC,KAAAC,YAAA,GAqEdyC,gBA3CmB,eAAAC,EAAAhE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA6D,EAAOhC,GAAP,IAAAtC,EAAAuE,EAAA9B,EAAA+B,EAAA,OAAAjE,EAAAC,EAAAG,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EACHkB,EAAI7B,aADD,cAChBH,EADgByE,EAAA1D,KAGhBwD,EAAS,CACb5B,cAAef,EACfgB,MA9Ee,eA+Ef8B,iBAAkB,gBAGdjC,EAASH,EAAaY,IAC1B,SAAAyB,GAAA,MASM,CATNA,EACErB,SADFqB,EAEEpB,KAFFoB,EAGEjB,OAHFiB,EAIEnB,MAJFmB,EAKEf,cALFe,EAME3D,OANF2D,EAOEhB,UAPFgB,EAQEd,QAaEW,EAAiB,CACrBI,eAAgB,OAChBhC,MA1Ge,eA2GfH,UAlCoBgC,EAAA3D,KAAA,EAqChBd,EAAKgB,OAAOuB,OAAOC,aAAaC,OAAOoC,OAAON,EAAQC,GArCtC,wBAAAC,EAAAjD,SAAA8C,MAAH,gBAAAQ,GAAA,OAAAT,EAAA5C,MAAAC,KAAAC,YAAA,qQC1DRoD,EAAA,CACbC,WApBc,eAAA5E,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAV,EAAA,OAAAO,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEZ,EAAUC,aADZ,cACXH,EADWY,EAAAG,KAAAH,EAAAW,OAAA,SAEVvB,EAAKiF,MAAMC,kBAAkBF,WAAWtC,OAF9B,wBAAA9B,EAAAY,SAAAd,MAAH,yBAAAN,EAAAqB,MAAAC,KAAAC,YAAA,GAqBdwD,OAjBU,eAAApB,EAAA1D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAuD,EAAMoB,GAAN,OAAA7E,EAAAC,EAAAG,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EACMZ,EAAUC,aADhB,OAAA+D,EAAAnD,KAERkE,MAAMC,kBAAkBF,WAAWG,OAAOC,GAFlC,wBAAAlB,EAAA1C,SAAAwC,MAAH,gBAAAc,GAAA,OAAAf,EAAAtC,MAAAC,KAAAC,YAAA,GAkBV0D,OAbU,eAAAhB,EAAAhE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA6D,IAAA,OAAA/D,EAAAC,EAAAG,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EACMZ,EAAUC,aADhB,OAAAsE,EAAA1D,KAERkE,MAAMC,kBAAkBG,SAFhB,wBAAAZ,EAAAjD,SAAA8C,MAAH,yBAAAD,EAAA5C,MAAAC,KAAAC,YAAA,GAcV2D,QATW,eAAAX,EAAAtE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA8E,IAAA,OAAAhF,EAAAC,EAAAG,KAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,cAAA0E,EAAA1E,KAAA,EACKZ,EAAUC,aADf,OAAAqF,EAAAzE,KAETkE,MAAMC,kBAAkBI,UAFf,wBAAAE,EAAAhE,SAAA+D,MAAH,yBAAAZ,EAAAlD,MAAAC,KAAAC,YAAA,iCCVA8D,GAAkB,SAAArF,GAA+C,IAAAsF,EAAAtF,EAA5CuF,YAAepC,EAA6BmC,EAA7BnC,KAAMD,EAAuBoC,EAAvBpC,SAAUO,EAAa6B,EAAb7B,KAC/D,OACE+B,EAAApF,EAAAqF,cAACC,GAAA,EAAD,KACEF,EAAApF,EAAAqF,cAACE,GAAA,EAAD,QAAAC,OAAkBzC,EAAlB,SAAAyC,OAA8B1C,EAA9B,KAAA0C,OAA0CC,IACxCpC,EACA,sBACAqC,eAIKC,GAAkB,SAAApC,GAAsB,IAAnBzB,EAAmByB,EAAnBzB,aAChC,OACEsD,EAAApF,EAAAqF,cAACO,EAAA,EAAD,KACG9D,EAAaY,IAAI,SAChBmD,EACApD,GAFgB,OAIhB2C,EAAApF,EAAAqF,cAACS,GAAD,CAAiBlD,IAAKH,EAAG0C,YAAaU,oECO9CJ,MAASM,OAAO,MAEhB,IAuCMC,GAA2C,CAC/ClD,SAAU,GACVC,KAAM,GACNC,WAAOtB,EACPlB,OAAQ,GACR0C,OAAQ,GACRC,eAAWzB,EACX0B,cAAe,GACf6C,SAAU,EACV5C,KAAMoC,MAASS,OAAO,qBAsBlBC,8MACJC,MAAmB,CACjBC,oBAAqBL,GACrBM,eAAe,EACfC,MAAO,QASTC,YAAc,WACZC,EAAKC,SAAS,CAAEJ,eAAe,OAGjCK,YAAc,SAACC,EAAwBC,GACtB,cAAXA,GAIJJ,EAAKC,SAAS,CAAEJ,eAAe,OAGjCQ,MAAQ,WACNL,EAAKC,SAAS,CAAEL,oBAAqBL,QAGvCe,mBAAqB,SAACvC,GACpBiC,EAAKC,SAAS,CAAElC,kBAgBlBwC,aAAe,SAACC,GAAD,OAAmB,SAACL,GACjC,IAAMM,EAAQC,aAAO,KAAM,CAAC,SAAU,SAAUP,GAC1CP,EAAmBxG,OAAAuH,EAAA,EAAAvH,CAAA,GACpB4G,EAAKL,MAAMC,oBADSxG,OAAAwH,EAAA,EAAAxH,CAAA,GAEjBoH,EAAQC,IAGhB,GAAc,SAAVD,GAAoBC,EAAO,CAC7B,IAAMnE,EAAO0D,EAAKa,MAAM7D,MAAM8D,KAAK,SAAA9E,GAAC,OAAIA,EAAEkB,OAASuD,IAEnDb,EAAoBrD,MAAQD,EAAOA,EAAKC,WAAQtB,EAGlD+E,EAAKC,SAAS,CAAEL,4BAGlBmB,mDAAe,SAAAtH,EAAO0G,GAAP,IAAAa,EAAAC,EAAAC,EAAA7F,EAAA,OAAA/B,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbsG,EAAMgB,iBACAH,EAAoBI,aAAKC,KAALD,CACxBpB,EAAKL,MAAMC,oBAAoBJ,UAE3ByB,EAAa,SAACvC,GAAD,OACjB4C,aACE,OACAtC,IAAON,EAAY9B,KAAM,oBAAoB6C,OAC3C,sBAEFf,IAEEwC,EAAiBK,aACrBP,EACAQ,aAAO,YACPP,GAEI5F,EAAe6F,EAAelB,EAAKL,MAAMC,qBAE/C,IACEI,EAAKa,MAAMY,SAASpG,GACpB2E,EAAKK,QACLL,EAAKD,cACL,MAAOD,GACPE,EAAKC,SAAS,CAAEH,MAAOA,EAAMlE,OAAOkE,QAzBzB,wBAAAnG,EAAAY,SAAAd,8DA6BfiI,iBAAmB,WAEjB,OADiBtI,OAAAuI,EAAA,EAAAvI,CAAI4G,EAAKa,MAAMxF,cAAcuG,UAC9BC,MAAM,EAAG,sNArFA/D,EAAYC,oBAA/BA,SACND,EAAYI,OAAOzD,KAAK6F,oBACxB7F,KAAK6F,mBAAmBvC,+IA6BxBD,EAAYM,sDAIZN,EAAYO,2CAqDL,IACCyD,EAAYrH,KAAKoG,MAAjBiB,QACR,OAAIrH,KAAKkF,MAAMG,MACN,qEAELrF,KAAKoG,MAAMkB,UAEXpD,EAAApF,EAAAqF,cAAA,OAAKoD,UAAWF,EAAQG,iBACtBtD,EAAApF,EAAAqF,cAACsD,EAAA,EAAD,OAKDzH,KAAKkF,MAAM5B,WAedY,EAAApF,EAAAqF,cAAA,OAAKoD,UAAU,OACbrD,EAAApF,EAAAqF,cAACuD,EAAA,EAAD,CAAQC,SAAS,SACfzD,EAAApF,EAAAqF,cAACyD,EAAA,EAAD,KACE1D,EAAApF,EAAAqF,cAAC0D,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNR,UAAWF,EAAQW,MAHrB,aAKUvI,QALV,KAQAyE,EAAApF,EAAAqF,cAAC8D,EAAA,EAAD,CACEF,MAAM,UACNG,GAAG,iBACHC,QAASnI,KAAKoI,oBAHhB,UASJlE,EAAApF,EAAAqF,cAAA,QACEoD,UAAWF,EAAQgB,UACnBC,SAAUtI,KAAKsG,aACfiC,aAAa,OAEbrE,EAAApF,EAAAqF,cAACqE,EAAA,EAAD,CAAaC,UAAQ,EAAClB,UAAWF,EAAQqB,WACvCxE,EAAApF,EAAAqF,cAACwE,EAAA,EAAD,CAAYC,QAAQ,QAApB,QACA1E,EAAApF,EAAAqF,cAAC0E,EAAA,EAAD,CACE7C,MAAOhG,KAAKkF,MAAMC,oBAAoBtD,KACtCiH,SAAU9I,KAAK8F,aAAa,QAC5BrD,KAAK,OACLsG,WAAY,CACVb,GAAI,SAGNhE,EAAApF,EAAAqF,cAAA,UAAQ6B,MAAM,KACbhG,KAAKoG,MAAM7D,MAAMf,IAAI,SAAAwH,GAAM,OAC1B9E,EAAApF,EAAAqF,cAAA,UAAQzC,IAAKsH,EAAOvG,KAAMuD,MAAOgD,EAAOvG,MACrCuG,EAAOvG,UAMhByB,EAAApF,EAAAqF,cAAC8E,EAAA,EAAD,CACEjD,MAAOhG,KAAKkF,MAAMC,oBAAoBrD,OAAS,GAC/CoH,MAAM,WACNC,KAAK,SACLL,SAAU9I,KAAK8F,aAAa,SAC5ByB,UAAWF,EAAQqB,UACnBD,UAAQ,IAGVvE,EAAApF,EAAAqF,cAAC8E,EAAA,EAAD,CACEjD,MAAOhG,KAAKkF,MAAMC,oBAAoBJ,SACtCmE,MAAM,aACNC,KAAK,SACLJ,WAAY,CACVN,UAAU,EACVW,IAAK,GACLC,IAAK,GAEPP,SAAU9I,KAAK8F,aAAa,YAC5ByB,UAAWF,EAAQqB,UACnBD,UAAQ,IAGVvE,EAAApF,EAAAqF,cAACqE,EAAA,EAAD,CACEc,UAAU,WACVb,UAAQ,EACRlB,UAAWF,EAAQqB,WAEnBxE,EAAApF,EAAAqF,cAACoF,EAAA,EAAD,CAAWD,UAAU,UAArB,eACApF,EAAApF,EAAAqF,cAACqF,EAAA,EAAD,CACEC,aAAW,WACXhH,KAAK,WACL8E,UAAWF,EAAQqC,MACnB1D,MAAOhG,KAAKkF,MAAMC,oBAAoBvD,SACtCkH,SAAU9I,KAAK8F,aAAa,aAE5B5B,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,WACN4D,QACE1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CACE9B,MAAM,UACNgB,WAAY,CACVN,UAAU,KAIhBS,MAAM,aAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,SACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,WAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,aACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,eAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,SACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,aAKZhF,EAAApF,EAAAqF,cAACqE,EAAA,EAAD,CACEc,UAAU,WACVb,UAAQ,EACRlB,UAAWF,EAAQqB,WAEnBxE,EAAApF,EAAAqF,cAACoF,EAAA,EAAD,CAAWD,UAAU,UAArB,eACApF,EAAApF,EAAAqF,cAACqF,EAAA,EAAD,CACEC,aAAW,YACXhH,KAAK,YACL8E,UAAWF,EAAQqC,MACnB1D,MAAK,GAAA1B,OAAKtE,KAAKkF,MAAMC,oBAAoBlD,WACzC6G,SAAU9I,KAAK8F,aAAa,cAE5B5B,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,KACN4D,QACE1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CACE9B,MAAM,UACNgB,WAAY,CACVN,UAAU,KAIhBS,MAAM,QAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,KACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,QAGRhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,KACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,QAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,KACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,UAKZhF,EAAApF,EAAAqF,cAACqE,EAAA,EAAD,CACEc,UAAU,WACVb,UAAQ,EACRlB,UAAWF,EAAQqB,WAEnBxE,EAAApF,EAAAqF,cAACoF,EAAA,EAAD,CAAWD,UAAU,UAArB,aACApF,EAAApF,EAAAqF,cAACqF,EAAA,EAAD,CACEC,aAAW,SACXhH,KAAK,SACL8E,UAAWF,EAAQqC,MACnB1D,MAAOhG,KAAKkF,MAAMC,oBAAoBnD,OACtC8G,SAAU9I,KAAK8F,aAAa,WAE5B5B,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,IACN4D,QACE1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CACE9B,MAAM,UACNgB,WAAY,CACVN,UAAU,KAIhBS,MAAM,aAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,IACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,gBAKZhF,EAAApF,EAAAqF,cAACqE,EAAA,EAAD,CACEc,UAAU,WACVb,UAAQ,EACRlB,UAAWF,EAAQqB,WAEnBxE,EAAApF,EAAAqF,cAACoF,EAAA,EAAD,CAAWD,UAAU,UAArB,aACApF,EAAApF,EAAAqF,cAACqF,EAAA,EAAD,CACEC,aAAW,gBACXhH,KAAK,gBACL8E,UAAWF,EAAQqC,MACnB1D,MAAOhG,KAAKkF,MAAMC,oBAAoBjD,cACtC4G,SAAU9I,KAAK8F,aAAa,kBAE5B5B,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,OACN4D,QACE1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CACE9B,MAAM,UACNgB,WAAY,CACVN,UAAU,KAIhBS,MAAM,SAERhF,EAAApF,EAAAqF,cAACwF,EAAA,EAAD,CACE3D,MAAM,OACN4D,QAAS1F,EAAApF,EAAAqF,cAAC0F,EAAA,EAAD,CAAO9B,MAAM,YACtBmB,MAAM,WAKZhF,EAAApF,EAAAqF,cAAC8E,EAAA,EAAD,CACEjD,MAAOhG,KAAKkF,MAAMC,oBAAoB7F,OACtC4J,MAAM,UACNJ,SAAU9I,KAAK8F,aAAa,UAC5ByB,UAAWF,EAAQqB,YAGrBxE,EAAApF,EAAAqF,cAAC8E,EAAA,EAAD,CACEjD,MAAOhG,KAAKkF,MAAMC,oBAAoBhD,KACtC+G,MAAM,OACNC,KAAK,iBACLL,SAAU9I,KAAK8F,aAAa,QAC5ByB,UAAWF,EAAQqB,YAGrBxE,EAAApF,EAAAqF,cAAA,WACAD,EAAApF,EAAAqF,cAAC8D,EAAA,EAAD,CACEkB,KAAK,SACLrB,QAAQ,YACRC,MAAM,UACNR,UAAWF,EAAQyC,QAJrB,WASF5F,EAAApF,EAAAqF,cAAC0D,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNR,UAAWF,EAAQ0C,OAHrB,qBAQA7F,EAAApF,EAAAqF,cAAC6F,GAAD,CAAiBpJ,aAAcZ,KAAKiH,qBAEpC/C,EAAApF,EAAAqF,cAAC8F,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMrK,KAAKkF,MAAME,cACjBkF,iBAAkB,IAClBC,QAASvK,KAAKyF,YACd+E,aAAc,CACZC,mBAAoB,cAEtBC,QAASxG,EAAApF,EAAAqF,cAAA,QAAM+D,GAAG,cAAT,qBACTyC,OAAQ,CACNzG,EAAApF,EAAAqF,cAACyG,EAAA,EAAD,CACElJ,IAAI,QACJ+H,aAAW,QACX1B,MAAM,UACNI,QAASnI,KAAKyF,aAEdvB,EAAApF,EAAAqF,cAAC0G,EAAA/L,EAAD,WA/RNoF,EAAApF,EAAAqF,cAAC8D,EAAA,EAAD,CACEF,MAAM,UACND,QAAQ,YACRgD,KAAK,QACL5C,GAAG,mBACHC,QAASnI,KAAK+K,iBALhB,iBA/GWC,aAuZJC,eA7dA,SAACC,GAAD,OACbC,YAAa,CACX9C,UAAW,CACT+C,QAAS,OACTC,SAAU,QAEZ3B,MAAO,CACL0B,QAAS,OACTE,cAAe,OAEjBtD,KAAM,CACJuD,SAAU,GAEZ7C,UAAW,CACT8C,aAAcN,EAAMO,QAAQ,GAC5BC,WAAYR,EAAMO,QAAQ,GAC1BE,YAAaT,EAAMO,QAAQ,GAC3BG,MAAO,QAET7B,MAAO,CACL8B,UAAW,GACXH,WAAYR,EAAMO,QAAQ,GAC1BE,YAAaT,EAAMO,QAAQ,IAE7B3B,OAAQ,CACN+B,UAAWX,EAAMO,QAAQ,GACzBC,WAAYR,EAAMO,QAAQ,GAC1BE,YAAaT,EAAMO,QAAQ,GAC3BG,MAAO,QAETE,KAAM,CACJF,MAAO,KAETpE,gBAAiB,CACfqE,UAAW,MACXE,UAAW,aA0bFd,CAAmBhG,ICndrB+G,GAAoB,iCAAAtN,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAC,EACrCiN,GADqC,IAAArL,EAAA,OAAA/B,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGrC6M,EAvB+C,CAC/C9C,KCrB2B,kBDwCUjK,EAAAE,KAAA,EAIViB,IAAeI,MAJL,OAI/BG,EAJ+B1B,EAAAG,KAKrC4M,EAf8B,CAC9B9C,KCjCwC,6BDkCxC+C,QAakCtL,IAClCqL,EAtBiD,CACjD9C,KCxB4B,mBDuCS,wBAAAjK,EAAAY,SAAAd,MAAN,gBAAAoE,GAAA,OAAA1E,EAAAqB,MAAAC,KAAAC,YAAA,IAiFlBkM,GALOC,YApBE,SAAClH,GACvB,MAAO,CACLtE,aAAcsE,EAAMtE,aACpB2B,MAAO2C,EAAM3C,MACb+E,UAAWpC,EAAMoC,YAIyC,SAC5D2E,GAIA,OAFAA,EAASD,MACTC,EApD8B,SAACA,GAAD,OAC9B5L,IACG+B,aACAiK,KAAK,SAAA9J,GAAK,OAAI0J,EAxBuD,CACxE9C,KCrCiC,sBDsCjC+C,QAsB4C3J,QAkDrC,CACLyE,SAAU,SAACpG,GACTqL,EA9DyB,SAACrL,GAAD,OAAiC,SAC9DqL,GAD8D,OAG9D5L,IACGqC,gBAAgB9B,GAChByL,KAAK,kBAAMJ,EAASD,SAyDVtJ,CAAgB9B,OAKTwL,CAGpBnH,IEpHaqH,6BAAgB,CAC7B1L,aFyDiC,WAGf,IAFlBsE,EAEkBjF,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAFK,GACvB0K,EACkB1K,UAAAM,OAAA,EAAAN,UAAA,QAAAO,EAClB,OAAQmK,EAAOxB,MACb,ICpEsC,6BDqEpC,OAAOxK,OAAAuI,EAAA,EAAAvI,CAAIgM,EAAOuB,SACpB,QACE,OAAOhH,IEhEX3C,MFoE0B,WAGf,IAFX2C,EAEWjF,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAFK,GAChB0K,EACW1K,UAAAM,OAAA,EAAAN,UAAA,QAAAO,EACX,OAAQmK,EAAOxB,MACb,IC/E+B,sBDgF7B,OAAOxK,OAAAuI,EAAA,EAAAvI,CAAIgM,EAAOuB,SACpB,QACE,OAAOhH,IE3EXoC,UF+E4B,WAAgD,IAA/CpC,EAA+CjF,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAC5E,QAD4EA,UAAAM,OAAA,EAAAN,UAAA,QAAAO,GAC7D2I,MACb,ICvFyB,gBDwFvB,OAAO,EACT,ICxF0B,iBDyFxB,OAAO,EACT,QACE,OAAOjE,MGxFEqH,kBAFH,kBAAMrI,EAAApF,EAAAqF,cAACqI,GAAD,QCMZC,GAAcC,QACW,cAA7BrO,OAAOsO,SAASC,UAEe,UAA7BvO,OAAOsO,SAASC,UAEhBvO,OAAOsO,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTV,KAAK,SAAAc,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnI,QACf8H,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAtI,GACLoI,QAAQpI,MAAM,4CAA6CA,mBCnE3DuI,GAAqBC,0BAAgBC,KAKrCC,GAAQC,sBAAYC,GAAaC,+BAAoBN,KAE3DO,IAASC,OACPlK,EAAApF,EAAAqF,cAACkK,EAAA,EAAD,CAAUN,MAAOA,IACf7J,EAAApF,EAAAqF,cAACmK,GAAD,OAEFC,SAASC,eAAe,SDHX,WACb,GAA6C,kBAAmBxB,UAAW,CAGzE,GADkB,IAAIyB,IAAIhP,SAAwBpB,OAAOsO,UAC3C+B,SAAWrQ,OAAOsO,SAAS+B,OAIvC,OAGFrQ,OAAOsQ,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAAzI,OAAM7E,SAAN,sBAEPgN,IAiDV,SAAiCM,GAE/B6B,MAAM7B,GACHV,KAAK,SAAAwC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ/N,IAAI,gBAAgBW,QAAQ,cAG7CqL,UAAUC,cAAc+B,MAAM3C,KAAK,SAAAc,GACjCA,EAAa8B,aAAa5C,KAAK,WAC7BhO,OAAOsO,SAASuC,aAKpBpC,GAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEArEAyB,CAAwBpC,GAIxBC,UAAUC,cAAc+B,MAAM3C,KAAK,WACjCoB,QAAQC,IACN,+GAMJZ,GAAgBC,MCtBxBqC","file":"static/js/main.78b188dd.chunk.js","sourcesContent":["import $script from 'scriptjs';\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst SCOPES = 'https://www.googleapis.com/auth/spreadsheets';\nconst DISCOVERY_DOCS = [\n  'https://sheets.googleapis.com/$discovery/rest?version=v4'\n];\n\nconst session = new Promise(resolve => {\n  $script('https://apis.google.com/js/api.js', () => {\n    window.gapi.load('client:auth2', () => resolve(window.gapi));\n  });\n});\n\nconst getSession = async () => {\n    const gapi = await session;\n    await gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      return gapi;\n};\n\nexport default {\n  getSession\n};\n","import googleApi from './googleApi';\nimport { indexOf } from 'ramda';\nimport { Transaction, Item } from './types';\n\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\nconst FETCH_RANGE = 'entrada!A2:H';\nconst INSERT_RANGE = 'entrada!A1:B';\nconst FETCH_ITEMS_RANGE = 'servicos!A2:B';\nconst TRANSACTIONS_COLUMNS: Array<keyof Transaction> = [\n  'employee',\n  'item',\n  'gender',\n  'price',\n  'paymentStatus',\n  'client',\n  'commisson',\n  'date'\n];\n\nconst ITEMS_COLUMNS = ['name', 'price'];\n\nconst StoreService = (api = googleApi) => {\n  const all = async () => {\n    const gapi = await api.getSession();\n    const spreadsheet = await gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: SPREADSHEET_ID,\n      range: FETCH_RANGE\n    });\n\n    const rows: Array<Array<string>> = spreadsheet.result.values || [];\n\n    const transactions = rows\n      .filter(row => row.some(i => i))\n      .map(row => {\n        const valueOf = (key: keyof Transaction): string =>\n          row[indexOf(key, TRANSACTIONS_COLUMNS)];\n        const transaction: Transaction = {\n          employee: valueOf('employee'),\n          item: valueOf('item'),\n          price: Number(valueOf('price')),\n          client: valueOf('client'),\n          gender: valueOf('gender'),\n          commisson: Number(valueOf('commisson')),\n          paymentStatus: valueOf('paymentStatus'),\n          date: valueOf('date')\n        };\n\n        return transaction;\n      });\n\n    return transactions;\n  };\n\n  const fetchItems = async (): Promise<Item[]> => {\n    const gapi = await api.getSession();\n\n    const spreadsheet = await gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: SPREADSHEET_ID,\n      range: FETCH_ITEMS_RANGE\n    });\n\n    const rows: Array<Array<string>> = spreadsheet.result.values || [];\n\n    const items = rows\n      .filter(row => row.some(i => i))\n      .map(row => {\n        const valueOf = (key: keyof Item): string =>\n          row[indexOf(key, ITEMS_COLUMNS)];\n\n        const item: Item = {\n          name: valueOf('name'),\n          price: Number(valueOf('price')) || undefined\n        };\n        return item;\n      });\n\n    return items;\n  };\n\n  const addTransactions = async (transactions: Transaction[]) => {\n    const gapi = await api.getSession();\n\n    const params = {\n      spreadsheetId: SPREADSHEET_ID,\n      range: INSERT_RANGE,\n      valueInputOption: 'USER_ENTERED'\n    };\n\n    const values = transactions.map(\n      ({\n        employee,\n        item,\n        gender,\n        price,\n        paymentStatus,\n        client,\n        commisson,\n        date\n      }) => [\n        employee,\n        item,\n        gender,\n        price,\n        paymentStatus,\n        client,\n        commisson,\n        date\n      ]\n    );\n\n    const valueRangeBody = {\n      majorDimension: 'ROWS',\n      range: INSERT_RANGE,\n      values\n    };\n\n    await gapi.client.sheets.spreadsheets.values.append(params, valueRangeBody);\n  };\n\n  return {\n    all,\n    fetchItems,\n    addTransactions\n  };\n};\n\nexport default StoreService;\n","import googleApi from './googleApi';\n\nconst isSignedIn = async () => {\n  const gapi = await googleApi.getSession();\n  return gapi.auth2.getAuthInstance().isSignedIn.get();\n};\nconst listen = async cb => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().isSignedIn.listen(cb);\n};\n\nconst signIn = async () => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().signIn();\n};\n\nconst signOut = async () => {\n  const gapi = await googleApi.getSession();\n  gapi.auth2.getAuthInstance().signOut();\n};\n\nexport default {\n  isSignedIn,\n  listen,\n  signIn,\n  signOut\n};\n","import React from 'react';\nimport moment from 'moment';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport const TransactionItem = ({ transaction: { item, employee, date } }) => {\n  return (\n    <ListItem>\n      <ListItemText>{`${item} por ${employee} ${moment(\n        date,\n        'DD/MM/YYYY h:mm:ss'\n      ).calendar()}`}</ListItemText>\n    </ListItem>\n  );\n};\nexport const TransactionList = ({ transactions }) => {\n  return (\n    <List>\n      {transactions.map((\n        t,\n        i // TODO: add a ID, we should not use index\n      ) => (\n        <TransactionItem key={i} transaction={t} />\n      ))}\n    </List>\n  );\n};\n","import React, { Component, SyntheticEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  WithStyles\n} from '@material-ui/core/styles';\nimport authService from '../authService';\nimport { TransactionList } from './TransactionList';\nimport { pathOr, flip, repeat, assoc, dissoc, compose } from 'ramda';\nimport { Transaction, Item } from '../types';\n\nmoment().locale('pt');\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    group: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    flex: {\n      flexGrow: 1\n    },\n    textField: {\n      marginBottom: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '100%'\n    },\n    title: {\n      marginTop: 40,\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    submit: {\n      marginTop: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '100%'\n    },\n    menu: {\n      width: 200\n    },\n    progressWrapper: {\n      marginTop: '30%',\n      textAlign: 'center'\n    }\n  });\n\nconst DEFAULT_TRANSACTION: TransactionToSubmit = {\n  employee: '',\n  item: '',\n  price: undefined,\n  client: '',\n  gender: '',\n  commisson: undefined,\n  paymentStatus: '',\n  quantity: 1,\n  date: moment().format('YYYY-MM-DDThh:mm')\n};\n\ninterface CartProps extends WithStyles<typeof styles> {\n  items: Item[];\n  transactions: Transaction[];\n  isLoading: boolean;\n  onCreate: Function;\n}\n\ninterface TransactionToSubmit extends Transaction {\n  quantity: number;\n}\n\ninterface CartState {\n  error: Error | null;\n  isMessageOpen: boolean;\n  isSignedIn?: boolean;\n  isLoading?: boolean;\n  transactionToSubmit: TransactionToSubmit;\n}\n\nclass Cart extends Component<CartProps, CartState> {\n  state: CartState = {\n    transactionToSubmit: DEFAULT_TRANSACTION,\n    isMessageOpen: false,\n    error: null\n  };\n\n  async componentDidMount() {\n    const isSignedIn = await authService.isSignedIn();\n    authService.listen(this.updateSigninStatus);\n    this.updateSigninStatus(isSignedIn);\n  }\n\n  showMessage = () => {\n    this.setState({ isMessageOpen: true });\n  };\n\n  handleClose = (event?: SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ isMessageOpen: false });\n  };\n\n  reset = () => {\n    this.setState({ transactionToSubmit: DEFAULT_TRANSACTION });\n  };\n\n  updateSigninStatus = (isSignedIn: boolean) => {\n    this.setState({ isSignedIn });\n    if (isSignedIn) {\n      // TODO: Extrat this to a login component\n      // this.fetchTransactions();\n      // this.fetchItems();\n    }\n  };\n\n  handleAuthClick() {\n    authService.signIn();\n  }\n\n  handleSignoutClick() {\n    authService.signOut();\n  }\n\n  handleChange = (field: string) => (event: object) => {\n    const value = pathOr(null, ['target', 'value'], event);\n    const transactionToSubmit = {\n      ...this.state.transactionToSubmit,\n      ...{ [field]: value }\n    };\n\n    if (field === 'item' && value) {\n      const item = this.props.items.find(i => i.name === value);\n\n      transactionToSubmit.price = item ? item.price : undefined;\n    }\n\n    this.setState({ transactionToSubmit });\n  };\n\n  handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const repeatTransaction = flip(repeat)(\n      this.state.transactionToSubmit.quantity\n    );\n    const formatDate = (transaction: Transaction) =>\n      assoc(\n        'date',\n        moment(transaction.date, 'YYYY-MM-DDThh:mm').format(\n          'DD/MM/YYYY h:mm:ss'\n        ),\n        transaction\n      );\n    const toTransactions = compose(\n      repeatTransaction,\n      dissoc('quantity'),\n      formatDate\n    );\n    const transactions = toTransactions(this.state.transactionToSubmit);\n\n    try {\n      this.props.onCreate(transactions);\n      this.reset();\n      this.showMessage();\n    } catch (error) {\n      this.setState({ error: error.result.error });\n    }\n  };\n\n  lastTransactions = () => {\n    const reversed = [...this.props.transactions].reverse();\n    return reversed.slice(0, 10);\n  };\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.error) {\n      return 'Ocorreu um erro, edite diretamente na planilha ou tente mais tarde';\n    }\n    if (this.props.isLoading) {\n      return (\n        <div className={classes.progressWrapper}>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (!this.state.isSignedIn) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          id=\"authorize_button\"\n          onClick={this.handleAuthClick}\n        >\n          Entrar\n        </Button>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Typography\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={classes.flex}\n            >\n              Salão ({process.env.REACT_APP_VERSION})\n            </Typography>\n\n            <Button\n              color=\"inherit\"\n              id=\"signout_button\"\n              onClick={this.handleSignoutClick}\n            >\n              Sair\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <form\n          className={classes.container}\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n        >\n          <FormControl required className={classes.textField}>\n            <InputLabel htmlFor=\"item\">Item</InputLabel>\n            <Select\n              value={this.state.transactionToSubmit.item}\n              onChange={this.handleChange('item')}\n              name=\"item\"\n              inputProps={{\n                id: 'item'\n              }}\n            >\n              <option value=\"\" />\n              {this.props.items.map(option => (\n                <option key={option.name} value={option.name}>\n                  {option.name}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            value={this.state.transactionToSubmit.price || ''}\n            label=\"Preço\"\n            type=\"number\"\n            onChange={this.handleChange('price')}\n            className={classes.textField}\n            required\n          />\n\n          <TextField\n            value={this.state.transactionToSubmit.quantity}\n            label=\"Quantidade\"\n            type=\"number\"\n            inputProps={{\n              required: false,\n              max: 10,\n              min: 1\n            }}\n            onChange={this.handleChange('quantity')}\n            className={classes.textField}\n            required\n          />\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Colaborador</FormLabel>\n            <RadioGroup\n              aria-label=\"employee\"\n              name=\"employee\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.employee}\n              onChange={this.handleChange('employee')}\n            >\n              <FormControlLabel\n                value=\"Maurilio\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"Maurilio\"\n              />\n              <FormControlLabel\n                value=\"Victor\"\n                control={<Radio color=\"primary\" />}\n                label=\"Victor\"\n              />\n              <FormControlLabel\n                value=\"Danúbia\"\n                control={<Radio color=\"primary\" />}\n                label=\"Danúbia\"\n              />\n              <FormControlLabel\n                value=\"Samuel\"\n                control={<Radio color=\"primary\" />}\n                label=\"Samuel\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Comissão</FormLabel>\n            <RadioGroup\n              aria-label=\"commisson\"\n              name=\"commisson\"\n              className={classes.group}\n              value={`${this.state.transactionToSubmit.commisson}`}\n              onChange={this.handleChange('commisson')}\n            >\n              <FormControlLabel\n                value=\"15\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"15%\"\n              />\n              <FormControlLabel\n                value=\"20\"\n                control={<Radio color=\"primary\" />}\n                label=\"20%\"\n              />\n\n              <FormControlLabel\n                value=\"30\"\n                control={<Radio color=\"primary\" />}\n                label=\"30%\"\n              />\n              <FormControlLabel\n                value=\"40\"\n                control={<Radio color=\"primary\" />}\n                label=\"40%\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Gênero</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.gender}\n              onChange={this.handleChange('gender')}\n            >\n              <FormControlLabel\n                value=\"F\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"Feminino\"\n              />\n              <FormControlLabel\n                value=\"M\"\n                control={<Radio color=\"primary\" />}\n                label=\"Masculino\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.textField}\n          >\n            <FormLabel component=\"legend\">Pagamento</FormLabel>\n            <RadioGroup\n              aria-label=\"paymentStatus\"\n              name=\"paymentStatus\"\n              className={classes.group}\n              value={this.state.transactionToSubmit.paymentStatus}\n              onChange={this.handleChange('paymentStatus')}\n            >\n              <FormControlLabel\n                value=\"pago\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    inputProps={{\n                      required: true\n                    }}\n                  />\n                }\n                label=\"pago\"\n              />\n              <FormControlLabel\n                value=\"deve\"\n                control={<Radio color=\"primary\" />}\n                label=\"deve\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <TextField\n            value={this.state.transactionToSubmit.client}\n            label=\"Cliente\"\n            onChange={this.handleChange('client')}\n            className={classes.textField}\n          />\n\n          <TextField\n            value={this.state.transactionToSubmit.date}\n            label=\"Data\"\n            type=\"datetime-local\"\n            onChange={this.handleChange('date')}\n            className={classes.textField}\n          />\n\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Salvar\n          </Button>\n        </form>\n        <Typography\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          className={classes.title}\n        >\n          Últimas vendas\n        </Typography>\n\n        <TransactionList transactions={this.lastTransactions()} />\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n          open={this.state.isMessageOpen}\n          autoHideDuration={2000}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id'\n          }}\n          message={<span id=\"message-id\">Salvo com sucesso</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Cart);\n","import { connect, MapDispatchToPropsParam } from 'react-redux';\nimport StoreService from '../storeService';\nimport Cart from './Cart';\nimport {\n  Transaction,\n  Item,\n  StartLoading,\n  AppActions,\n  FetchTransactionsSuccess,\n  FinishLoading,\n  FetchItemsSuccess,\n  AppState\n} from '../types';\nimport { Dispatch } from 'redux';\nimport {\n  START_LOADING,\n  FINISH_LOADING,\n  FETCH_TRANSACTIONS_SUCCESS,\n  FETCH_ITEMS_SUCCESS\n} from '../constants';\nimport { ThunkDispatch } from 'redux-thunk';\n\nexport const startLoading = (): StartLoading => ({\n  type: START_LOADING\n});\n\nexport const finishLoading = (): FinishLoading => ({\n  type: FINISH_LOADING\n});\n\nexport const fetchTransactionsSuccess = (\n  payload: Transaction[]\n): FetchTransactionsSuccess => ({\n  type: FETCH_TRANSACTIONS_SUCCESS,\n  payload\n});\n\nexport const fetchItemsSuccess = (payload: Item[]): FetchItemsSuccess => ({\n  type: FETCH_ITEMS_SUCCESS,\n  payload\n});\n\nexport const fetchTransactions = () => async (\n  dispatch: ThunkDispatch<any, any, AppActions>\n) => {\n  dispatch(startLoading());\n  const transactions = await StoreService().all();\n  dispatch(fetchTransactionsSuccess(transactions));\n  dispatch(finishLoading());\n};\n\nexport const addTransactions = (transactions: Transaction[]) => (\n  dispatch: ThunkDispatch<any, any, AppActions>\n) =>\n  StoreService()\n    .addTransactions(transactions)\n    .then(() => dispatch(fetchTransactions()));\n\nexport const fetchItems = () => (dispatch: Dispatch<AppActions>) =>\n  StoreService()\n    .fetchItems()\n    .then(items => dispatch(fetchItemsSuccess(items)));\n\nexport const transactionsReducer = (\n  state: Transaction[] = [],\n  action: AppActions\n): Transaction[] => {\n  switch (action.type) {\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport const itemsReducer = (\n  state: Item[] = [],\n  action: AppActions\n): Item[] => {\n  switch (action.type) {\n    case FETCH_ITEMS_SUCCESS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport const loadingReducer = (state = false, action: AppActions): boolean => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case FINISH_LOADING:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    transactions: state.transactions,\n    items: state.items,\n    isLoading: state.isLoading\n  };\n};\n\nconst mapDispatchToProps: MapDispatchToPropsParam<any, any> = (\n  dispatch: ThunkDispatch<any, any, AppActions>\n) => {\n  dispatch(fetchTransactions());\n  dispatch(fetchItems());\n  return {\n    onCreate: (transactions: Transaction[]) => {\n      dispatch(addTransactions(transactions));\n    }\n  };\n};\n\nconst CartContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n\nexport default CartContainer;\n","export const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\nexport const START_LOADING = 'START_LOADING';\nexport const FINISH_LOADING = 'FINISH_LOADING';\nexport const NO_ACTION = 'NO_ACTION'; // for testing purposes\n","import { combineReducers } from 'redux';\nimport { transactionsReducer as transactions } from './cart/CartContainer';\nimport { itemsReducer as items } from './cart/CartContainer';\nimport { loadingReducer as isLoading } from './cart/CartContainer';\n\nexport default combineReducers({\n  transactions,\n  items,\n  isLoading\n});\n","import React from 'react';\nimport CartContainer from './cart/CartContainer';\nimport './App.css';\n\nconst App = () => <CartContainer />;\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware, { ThunkMiddleware } from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { AppState, AppActions } from './types';\n\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware as ThunkMiddleware<\n  AppState,\n  AppActions\n>);\n\nconst store = createStore(rootReducer, composeWithDevTools(middlewareEnhancer));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}